// /sales2/js/collection.js
let collectionTable;

// ===== Ïò§Î≤ÑÎ†àÏù¥ Ïä§ÌÉÄÏùº Ï£ºÏûÖ(Ìïú Î≤à) =====
(function injectInvoiceOverlayCSS() {
  if (document.getElementById("invoice-overlay-style")) return;
  const css = `
    #invoice-table{ position:relative; }
    #invoice-table .invoice-loading-overlay{
      position:absolute; inset:0;
      display:none; align-items:center; justify-content:center;
      backdrop-filter: blur(1px);
      background: rgba(255,255,255,0.6);
      z-index: 3;
    }
    #invoice-table .invoice-loading-overlay .overlay-inner{
      display:flex; flex-direction:column; align-items:center; gap:10px;
      padding: 10px 16px; border-radius:10px;
      background: rgba(255,255,255,0.8);
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    }
    #invoice-table .invoice-loading-overlay .overlay-text{ font-weight:600; color:#334155; }
    #invoice-table .invoice-loading-overlay.is-error .overlay-inner{ background:#fff0f0; }
    #invoice-table .invoice-loading-overlay.is-error .overlay-text{ color:#b91c1c; }
  `;
  const style = document.createElement("style");
  style.id = "invoice-overlay-style";
  style.textContent = css;
  document.head.appendChild(style);
})();

// ===== Î°úÎî©/Ïò§Î≤ÑÎ†àÏù¥ Ïú†Ìã∏ =====
function ensureInvoiceOverlayHost() {
  const host = document.getElementById("invoice-table");
  if (!host) return null;
  let overlay = host.querySelector(".invoice-loading-overlay");
  if (!overlay) {
    overlay = document.createElement("div");
    overlay.className = "invoice-loading-overlay";
    overlay.innerHTML = `
      <div class="overlay-inner">
        <div class="spinner-border" role="status" aria-label="loading"></div>
        <div class="overlay-text">Î°úÎî©Ï§ë‚Ä¶</div>
      </div>`;
    host.style.position = host.style.position || "relative";
    host.appendChild(overlay);
  }
  return overlay;
}
function showInvoiceLoading() {
  const overlay = ensureInvoiceOverlayHost();
  if (!overlay) return;
  overlay.classList.remove("is-error");
  overlay.querySelector(".overlay-text").textContent = "Î°úÎî©Ï§ë‚Ä¶";
  overlay.style.display = "flex";
}
function showInvoiceError(msg) {
  const overlay = ensureInvoiceOverlayHost();
  if (!overlay) return;
  overlay.classList.add("is-error");
  overlay.querySelector(".overlay-text").textContent = msg || "Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.";
  overlay.style.display = "flex";
}
function hideInvoiceOverlay() {
  const host = document.getElementById("invoice-table");
  if (!host) return;
  const overlay = host.querySelector(".invoice-loading-overlay");
  if (overlay) overlay.style.display = "none";
}

/* ============================
   ‚ñº‚ñº Ï∂îÍ∞Ä: ÏÉÅÏÑ∏ ÏÑπÏÖò ÏûêÎèô Îã´Ìûò ÏÉÅÌÉú Í¥ÄÎ¶¨ ‚ñº‚ñº
   ============================ */
// ÌòÑÏû¨ ÏÉÅÏÑ∏(Ï≤≠Íµ¨ÎÇ¥Ïó≠)Ïóê ÌëúÏãú Ï§ëÏù∏ Í±∞ÎûòÏ≤ò ÏΩîÎìú
let currentInvoicePartnerCode = null;

// ÏÉÅÏÑ∏ ÏÑπÏÖò ÎπÑÏö∞Í∏∞(Îã´Í∏∞ÏôÄ ÎèôÏùº Ìö®Í≥º)
function clearInvoiceSection() {
  try { window.invoiceTable?.clearData(); } catch {}
  try {
    const title = document.getElementById("invoice-title");
    if (title) title.textContent = "Ï≤≠Íµ¨ÎÇ¥Ïó≠";
  } catch {}
  try {
    // Ï°∞Ìöå Î≤ÑÌäº ÌïòÏù¥ÎùºÏù¥Ìä∏ Ï†úÍ±∞
    document
      .getElementById("sales-table")
      ?.querySelectorAll(".btn-view-invoices")
      .forEach(btn => {
        btn.classList.remove("active", "btn-primary");
        btn.classList.add("btn-outline-primary");
      });
  } catch {}
}
/* ============================
   ‚ñ≤‚ñ≤ Ï∂îÍ∞Ä ÎÅù ‚ñ≤‚ñ≤
   ============================ */

document.addEventListener("DOMContentLoaded", function () {
  // ===============================
  // üìå ÌÖåÏù¥Î∏î ÏÉùÏÑ± (ÏàòÍ∏à Í∑∏Î¶¨Îìú)
  // ===============================
  const salesTableEl = document.getElementById("sales-table");
  if (!salesTableEl) {
    console.error("‚ùå #sales-table ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.");
    return;
  }

  // Ï†ÑÏó≠ÏúºÎ°ú Ï†ëÍ∑º Í∞ÄÎä•ÌïòÍ≤å
  window.table = new Tabulator(salesTableEl, {
    layout: "fitColumns",
    height: "334px",
    selectable: false, // ‚òÖ Ìñâ ÌÅ¥Î¶≠Ïãú ÏÑ†ÌÉù/ÌïòÏù¥ÎùºÏù¥Ìä∏ Ïïà ÎêòÎèÑÎ°ù
    placeholder: "Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.",
    ajaxURL: "/api/receivable/list",
    pagination: "local",
    paginationSize: 6,
    paginationCounter: "rows",
    columnDefaults: { vertAlign: "middle", headerHozAlign: "center" },
    selectablePersistence: true,
    ajaxResponse: function (url, params, response) {
      const el = document.querySelector("#total-count span");
      if (el) el.textContent = (Array.isArray(response) ? response.length : 0) + "Í±¥";

      /* ---------------------------
         ‚òÖ Ï∂îÍ∞Ä: Î™©Î°ù Í∞±Ïã† Ïãú ÏÉÅÏÑ∏ ÏûêÎèô Îã´Í∏∞
         ÌòÑÏû¨ ÏÉÅÏÑ∏Ïóê ÎùÑÏö¥ Í±∞ÎûòÏ≤òÍ∞Ä Î™©Î°ùÏóêÏÑú ÏÇ¨ÎùºÏ°åÎã§Î©¥ ÏÉÅÏÑ∏ ÏÑπÏÖò ÌÅ¥Î¶¨Ïñ¥
         --------------------------- */
      try {
        if (currentInvoicePartnerCode) {
          const stillExists = Array.isArray(response) && response.some(r =>
            (r.PARTNER_CODE || r.partnerCode) === currentInvoicePartnerCode
          );
          if (!stillExists) {
            currentInvoicePartnerCode = null;
            clearInvoiceSection();
          }
        }
      } catch (_) {}

      return response;
    },
    columns: [
      { title: "Í±∞ÎûòÏ≤òÎ™Ö", field: "CUSTOMERNAME", hozAlign: "center", widthGrow: 0.3 },
      { title: "ÎØ∏ÏàòÍ∏àÏï°(Ïõê)", field: "TOTALSALES", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.3 },
      { title: "Ï¥ù ÏàòÍ∏à(Ïõê)", field: "TOTALCOLLECTED", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.5 },
      { title: "ÎØ∏ÏàòÏûîÏï°(Ïõê)", field: "OUTSTANDING", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.5 },
      { title: "ÎØ∏ÏàòÍ±¥Ïàò", field: "INVOICE_COUNT", hozAlign: "center", widthGrow: 0.5 },
      {
        title: "Ï°∞Ìöå",
        field: "VIEW_BTN",
        hozAlign: "center",
        headerSort: false,
        widthGrow: 0.5,
        formatter: () => '<button class="btn btn-outline-primary btn-view-invoices js-view-invoices">Ï°∞Ìöå</button>',
        cellClick: async (e, cell) => {
          e.stopPropagation();
          const d = cell.getRow().getData();
          updateInvoiceTitle(d?.CUSTOMERNAME);
          await renderInvoiceTable(d);
          document.getElementById("invoice-table")?.scrollIntoView({ behavior: "smooth", block: "start" });
          setActiveViewButton(cell);
        }
      }
    ],
    rowClick: async function (e, row) {
      if (e.target.closest(".js-view-invoices")) return;
      const d = row.getData();
      updateInvoiceTitle(d?.CUSTOMERNAME);
      await openCollectionModal(d);
    }
  });

  // ‚úÖ ÏÉùÏÑ± ÏßÅÌõÑ ÏïàÏ†ÑÌïú ÏßÄÏó≠ Ï∞∏Ï°∞
  const table = window.table;
  collectionTable = window.table;
  table.on("dataLoaded", function () {
    updateInvoiceTitle(null);
  });

  // ===============================
  // üìå Ï†úÎ™©/Î≤ÑÌäº ÏÉÅÌÉú
  // ===============================
  function updateInvoiceTitle(partnerName) {
    const el = document.getElementById("invoice-title");
    if (!el) return;
    el.textContent = partnerName ? `${partnerName}Ïùò Ï≤≠Íµ¨ÎÇ¥Ïó≠` : "Ï≤≠Íµ¨ÎÇ¥Ïó≠";
  }
  function setActiveViewButton(cell) {
    const allButtons = document.getElementById("sales-table").querySelectorAll(".btn-view-invoices");
    allButtons.forEach(btn => {
      btn.classList.remove("active", "btn-primary");
      btn.classList.add("btn-outline-primary");
    });
    const btn = cell.getElement().querySelector(".btn-view-invoices");
    if (btn) {
      btn.classList.remove("btn-outline-primary");
      btn.classList.add("btn-primary", "active");
    }
  }

  // ===============================
  // üìå ÏúÑÏûÑ ÌÅ¥Î¶≠(Î™®Îã¨ Ïó¥Î†§ÏûàÏúºÎ©¥ Î¨¥Ïãú)
  // ===============================
  salesTableEl.addEventListener("click", async function (e) {
    if (document.body.classList.contains("modal-open")) return;
    if (e.target.closest(".js-view-invoices")) return;
    const rowEl = e.target.closest(".tabulator-row");
    if (!rowEl) return;
    try {
      const row = table.rowManager.activeRows.find(r => r.element === rowEl);
      const data = row ? row.getData() : null;
      if (data) {
        await openCollectionModal(data);
      }
    } catch (err) {
      console.warn("delegate Ï≤òÎ¶¨ Ï§ë Ïò§Î•ò:", err);
    }
  });

  // üîÅ Ï†ÑÏó≠ Fallback(Î™®Îã¨ Ïó¥Î†§ÏûàÏúºÎ©¥ Î¨¥Ïãú)
  document.addEventListener(
    "click",
    async function (e) {
      if (document.body.classList.contains("modal-open")) return;
      if (e.target.closest(".js-view-invoices")) return;
      const rowEl = e.target.closest("#sales-table .tabulator-row");
      if (!rowEl) return;
      try {
        const row = table.rowManager.activeRows.find(r => r.element === rowEl);
        const data = row ? row.getData() : null;
        if (data) {
          await openCollectionModal(data);
        }
      } catch (err) {
        console.warn("document fallback Ï≤òÎ¶¨ Ï§ë Ïò§Î•ò:", err);
      }
    },
    true
  );

  // Î™®Îã¨ Îã´ÌûàÎ©¥ Í∞ïÏ°∞ Ìï¥Ï†ú(ÌòπÏãú ÎÇ®ÏïÑÏûàÎã§Î©¥) + Î¶¨ÎìúÎ°úÏö∞
  document.getElementById("insertCollectionModal")?.addEventListener("hidden.bs.modal", () => {
    document.querySelectorAll("#sales-table .row-active").forEach(el => el.classList.remove("row-active"));
    safeRedrawAll();
  });

  // ===============================
  // (A) API ‚Üí Í∞ÄÍ≥µ
  // ===============================
  async function fetchInvoices(partnerCode) {
    if (!partnerCode) return [];
    try {
      const res = await fetch(`/api/receivable/invoices?partnerCode=${encodeURIComponent(partnerCode)}`);
      if (!res.ok) throw new Error("HTTP " + res.status);
      const list = await res.json();
      return list.map(i => {
        const dmndAmt = Number(i.dmndAmt ?? 0);
        const unrctBaln = Number(i.unrctBaln ?? 0);
        const collected = dmndAmt - unrctBaln;
        const dmndDateStr = (() => {
          const v = i.dmndDate;
          if (!v) return "";
          if (typeof v === "string") return v.slice(0, 10);
          try {
            return new Date(v).toISOString().slice(0, 10);
          } catch {
            return "";
          }
        })();
        return {
          INVOICE_UNIQUE_CODE: i.invoiceUniqueCode,
          INVOICE_CODE: i.invoiceCode,
          DMND_DATE: dmndDateStr,
          ITEM_NAME: "-",
          TOTAL_QTY: null,
          DMND_AMT: dmndAmt,
          COLLECTED: collected,
          UNRCT_BALN: unrctBaln,
          STATUS: i.status || "",
          REMK: i.remk || ""
        };
      });
    } catch (e) {
      console.error("Ï≤≠Íµ¨ÏÑú Ï°∞Ìöå Ïò§Î•ò:", e);
      return [];
    }
  }

  // ===============================
  // (B) Ï≤≠Íµ¨ÎÇ¥Ïó≠ ÌÖåÏù¥Î∏î Î†åÎçîÎü¨
  // ===============================
  window.invoiceTable = null;
  async function renderInvoiceTable(rowData) {
    const el = document.getElementById("invoice-table");
    if (!el) return;
    const partnerCode = rowData?.PARTNER_CODE || rowData?.partnerCode || "";

    showInvoiceLoading();

    /* ‚òÖ Ï∂îÍ∞Ä: ÌòÑÏû¨ ÏÉÅÏÑ∏Ïùò Í±∞ÎûòÏ≤ò ÏΩîÎìú Ï†ÄÏû• */
    currentInvoicePartnerCode = partnerCode;

    try {
      const data = await fetchInvoices(partnerCode);
      const columns = [
		
        { title: "Ï≤≠Íµ¨Î≤àÌò∏", field: "INVOICE_CODE", width: 140, hozAlign: "center", widthGrow: 0.4 },
        { title: "Ï≤≠Íµ¨Ïùº", field: "DMND_DATE", width: 110, hozAlign: "center", widthGrow: 0.4 },
        { title: "Ï≤≠Íµ¨Í∏àÏï°(Ïõê)", field: "DMND_AMT", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.5 },
        { title: "ÏàòÍ∏àÍ∏àÏï°(Ïõê)", field: "COLLECTED", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.5 },
        { title: "ÎØ∏ÏàòÍ∏àÏï°(Ïõê)", field: "UNRCT_BALN", hozAlign: "right", formatter: "money", formatterParams: { precision: 0 }, widthGrow: 0.5 },
        {
          title: "ÏÉÅÌÉú",
          field: "STATUS",
          width: 110,
          hozAlign: "center",
          widthGrow: 0.6,
          headerFilter: "select",
          headerFilterParams: { values: { "": "Ï†ÑÏ≤¥", "ÏßÑÌñâÏ§ë": "ÏßÑÌñâÏ§ë", "ÏàòÍ∏àÏôÑÎ£å": "ÏàòÍ∏àÏôÑÎ£å", "ÏàòÍ∏àÎåÄÍ∏∞": "ÏàòÍ∏àÎåÄÍ∏∞" } },
          formatter: cell => {
            const v = (cell.getValue() || "").trim();
            const cls =
              v === "ÏàòÍ∏àÏôÑÎ£å" ? "bg-success" :
              v === "ÏßÑÌñâÏ§ë" ? "bg-warning" :
              v === "ÏàòÍ∏àÎåÄÍ∏∞" ? "bg-secondary" : "bg-light text-dark";
            return `<span class="badge ${cls}">${v || "-"}</span>`;
          }
        },
        { title: "ÎπÑÍ≥†", field: "REMK", minWidth: 120, widthGrow: 0.5 }
      ];

      if (!window.invoiceTable) {
        window.invoiceTable = new Tabulator(el, {
          layout: "fitColumns",
          height: "297px",           // ‚Üê ÎÜíÏù¥ Ï¶ùÍ∞Ä (Í∏∞Ï°¥ 260px)
          placeholder: "Ï≤≠Íµ¨ÎÇ¥Ïó≠Ïù¥ ÏóÜÏäµÎãàÎã§.",
          data,
          columns,
          columnDefaults: { headerHozAlign: "center" },
          index: "INVOICE_UNIQUE_CODE",
          pagination: "local",
          paginationSize: 6,         // ‚Üê ÌéòÏù¥ÏßÄÎãπ 5Í±¥ (Í∏∞Ï°¥ 8)
          paginationCounter: "rows"
        });
      } else {
        window.invoiceTable.setColumns(columns);
        window.invoiceTable.replaceData(data);
        window.invoiceTable.setPageSize(5); // ‚Üê Ïû¨Ï°∞Ìöå ÏãúÏóêÎèÑ 5Í±¥ Ïú†ÏßÄ
        window.invoiceTable.redraw(true);
      }
    } catch (err) {
      console.error("Ï≤≠Íµ¨ÎÇ¥Ïó≠ Î°úÎìú Ïò§Î•ò:", err);
      showInvoiceError("Ï≤≠Íµ¨ÎÇ¥Ïó≠ÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
      return;
    } finally {
      hideInvoiceOverlay();
    }
  }

  // ===============================
  // üìå Î™®Îã¨ Ïó¥Í∏∞
  // ===============================
  window.openCollectionModal = async function (rowData) {
    const modalRoot = document.getElementById("insertCollectionModal");
    if (!modalRoot) return;

    document.getElementById("modalPartnerName").value = rowData?.CUSTOMERNAME || "";
    const modalPartnerCodeEl = document.querySelector("#insertCollectionModal #partnerCode");
    if (modalPartnerCodeEl) modalPartnerCodeEl.value = rowData?.PARTNER_CODE || "";

    const rawOutstanding = Number(String(rowData?.OUTSTANDING ?? 0).replace(/[^\d]/g, "")) || 0;
    const outstandingHidden = document.getElementById("outstandingAmt");
    const outstandingView = document.getElementById("outstandingView");
    if (outstandingHidden) outstandingHidden.value = rawOutstanding;
    if (outstandingView) outstandingView.value = formatNumber(String(rawOutstanding));

    let empName = "";
    try {
      const res = await fetch("/api/collection/current-employee");
      if (res.ok) {
        const userInfo = await res.json();
        empName = userInfo.empName || "";
      }
    } catch (err) {
      console.warn("ÏÇ¨ÏõêÎ™Ö Ï°∞Ìöå Ïã§Ìå®:", err);
    }
    document.getElementById("managerName").value = empName || "Î°úÍ∑∏Ïù∏ÏÇ¨Ïö©Ïûê";

    const collectAmtInput = document.getElementById("collectAmt");
    const postDeductionInput = document.getElementById("postDeductionAmt");
    if (collectAmtInput) collectAmtInput.value = "";
    if (postDeductionInput) postDeductionInput.value = "";

    const modal = new bootstrap.Modal(modalRoot);
    modal.show();
    setTimeout(safeRedrawAll, 0);
  };

  // ===============================
  // üìå Í≤ÄÏÉâ
  // ===============================
  document.getElementById("btn-search")?.addEventListener("click", function () {
    const keyword = (document.getElementById("partnerName")?.value || "").trim();
    if (keyword) table.setFilter("CUSTOMERNAME", "like", keyword);
    else table.clearFilter();
    safeRedrawAll();
  });

  // ===============================
  // üìå Í∏àÏï° ÏûÖÎ†• Ìè¨Îß∑
  // ===============================
  const collectAmtInput = document.getElementById("collectAmt");
  function uncomma(v) {
    return String(v || "").replace(/[^\d]+/g, "");
  }
  function formatNumber(v) {
    v = String(v || "");
    return v.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  if (collectAmtInput) {
    collectAmtInput.addEventListener("input", e => (e.target.value = uncomma(e.target.value)));
    collectAmtInput.addEventListener("blur", e => (e.target.value = formatNumber(uncomma(e.target.value))));
    collectAmtInput.addEventListener("focus", e => (e.target.value = uncomma(e.target.value)));
  }

  const postDeductionInput = document.getElementById("postDeductionAmt");
  if (postDeductionInput) {
    postDeductionInput.addEventListener("input", e => (e.target.value = uncomma(e.target.value)));
    postDeductionInput.addEventListener("blur", e => (e.target.value = formatNumber(uncomma(e.target.value))));
    postDeductionInput.addEventListener("focus", e => (e.target.value = uncomma(e.target.value)));
  }

  // ===============================
  // üìå Ï†ÄÏû• (Î°úÎî© Ïò§Î≤ÑÎ†àÏù¥ + Ï§ëÎ≥µ Î∞©ÏßÄ)
  // ===============================
  document.getElementById("btnSave")?.addEventListener("click", async function () {
    const saveBtn = this;
    if (saveBtn.dataset.loading === "1") return; // Ï§ëÎ≥µ ÌÅ¥Î¶≠ Î∞©ÏßÄ

    const moneyDate = document.getElementById("moneyDate").value;
    const recpt = Number(uncomma(document.getElementById("collectAmt").value || "0"));
    const postDeduction = Number(uncomma((document.getElementById("postDeductionAmt")?.value) || "0"));
    const paymentMethods = document.getElementById("paymentType").value;
    const remk = document.getElementById("remarks").value;
    const partnerCode = document.querySelector("#insertCollectionModal #partnerCode")?.value || "";
    const outstandingVal = Number(uncomma(document.getElementById("outstandingAmt").value || "0"));

    // Í∏∞Î≥∏ Í≤ÄÏ¶ù
    if (!partnerCode) {
      alert("Í±∞ÎûòÏ≤òÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
      return;
    }
    if (recpt <= 0) {
      alert("ÏàòÍ∏àÍ∏àÏï°ÏùÄ 0Î≥¥Îã§ Ïª§Ïïº Ìï©ÎãàÎã§.");
      return;
    }
    if (recpt + postDeduction > outstandingVal) {
      alert("ÏàòÍ∏àÍ∏àÏï° + ÏÇ¨ÌõÑÍ≥µÏ†úÍ∞Ä ÎØ∏ÏàòÏûîÏï°Î≥¥Îã§ ÌÅΩÎãàÎã§.");
      return;
    }
    if (!paymentMethods) {
      alert("Í≤∞Ï†úÎ∞©ÏãùÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");
      return;
    }

    const data = { moneyDate, recpt, postDeduction, paymentMethods, remk, partnerCode };

    // ‚ñº UI Ïû†Í∑∏Í∏∞
    const closeBtn = document.querySelector("#insertCollectionModal .btn-close");
    const overlay = document.getElementById("collection-loading");
    const originalHtml = saveBtn.innerHTML;
    saveBtn.dataset.loading = "1";
    saveBtn.innerHTML = `<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Î°úÎî© Ï§ë‚Ä¶`;
    saveBtn.disabled = true;
    if (closeBtn) closeBtn.disabled = true;
    if (overlay) overlay.classList.remove("d-none");

    try {
      const res = await fetch("/api/collection/insert", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      });
      const result = await res.json();
      if (result.success) {
        alert("ÏàòÍ∏à Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
        bootstrap.Modal.getInstance(document.getElementById("insertCollectionModal"))?.hide();

        // ‚ñº‚ñº‚ñº Ïó¨Í∏∞Îßå Ï∂îÍ∞Ä/ÏàòÏ†ï: Î™®Îã¨ Îã´ÌûàÎ©¥ÏÑú Ï≤≠Íµ¨ÎÇ¥Ïó≠(ÌïòÎã®) ÎπÑÏö∞Í≥† Î©îÏù∏ÌÖåÏù¥Î∏îÎßå Î≥¥Ïù¥Í≤å ‚ñº‚ñº‚ñº
        try {
          currentInvoicePartnerCode = null; // ÌòÑÏû¨ ÏÉÅÏÑ∏ ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
          clearInvoiceSection();            // Ï≤≠Íµ¨ÎÇ¥Ïó≠ Îç∞Ïù¥ÌÑ∞/Ï†úÎ™©/Î≤ÑÌäº ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
        } catch (_) {}
        // ‚ñ≤‚ñ≤‚ñ≤ Ï∂îÍ∞Ä ÎÅù ‚ñ≤‚ñ≤‚ñ≤

        table?.replaceData();
      } else {
        alert("Ïã§Ìå®: " + (result.message || "ÏÑúÎ≤Ñ Ïò§Î•ò"));
      }
    } catch (err) {
      console.error("Îì±Î°ù Ï§ë Ïò§Î•ò:", err);
      alert("ÏÑúÎ≤Ñ ÌÜµÏã† Ïò§Î•ò");
    } finally {
      // ‚ñº UI Ìï¥Ï†ú
      saveBtn.innerHTML = originalHtml;
      saveBtn.disabled = false;
      if (closeBtn) closeBtn.disabled = false;
      if (overlay) overlay.classList.add("d-none");
      saveBtn.dataset.loading = "0";
    }
  });

  // ===============================
  // üìå ÌÅ¥Î¶≠ ÎßâÌûò Î∞©ÏßÄ(Ïú†ÏßÄ)
  // ===============================
  salesTableEl.style.position = "relative";
  salesTableEl.style.zIndex = "1"; // ‚òÖ Î™®Îã¨Î≥¥Îã§ Ìï≠ÏÉÅ ÏïÑÎûò
  salesTableEl.style.pointerEvents = "auto";
}); // end DOMContentLoaded

// ===============================
// ‚úÖ Í≥µÌÜµ Ïú†Ìã∏
// ===============================
function safeRedrawAll() {
  try {
    window.table?.redraw(true);
  } catch {}
  try {
    window.invoiceTable?.redraw(true);
  } catch {}
  setTimeout(() => {
    try {
      window.table?.redraw(true);
    } catch {}
    try {
      window.invoiceTable?.redraw(true);
    } catch {}
  }, 0);
}

function ensureSalesTableVisible() {
  const el = document.getElementById("sales-table");
  if (!el) return;
  const style = window.getComputedStyle(el);
  if (style.display === "none" || el.hidden) {
    el.hidden = false;
    el.style.display = "block";
  }
}

document.addEventListener("shown.bs.modal", function () {
  ensureSalesTableVisible();
  safeRedrawAll();
  try {
    const st = document.getElementById("sales-table");
    if (st) {
      st.style.pointerEvents = "none"; // Î™®Îã¨ Îñ†ÏûàÎäî ÎèôÏïà Îí§ ÌÅ¥Î¶≠ Ï∞®Îã®
      st.style.zIndex = "1"; // Ìï≠ÏÉÅ Î™®Îã¨Î≥¥Îã§ ÏïÑÎûò
    }
  } catch {}
});

document.addEventListener("hidden.bs.modal", function () {
  ensureSalesTableVisible();
  safeRedrawAll();
  try {
    document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
    document.body.classList.remove("modal-open");
    document.body.style.removeProperty("padding-right");
    document.body.style.removeProperty("overflow");
  } catch {}
  try {
    const st = document.getElementById("sales-table");
    if (st) {
      st.style.position = "relative";
      st.style.zIndex = "1"; // ÎÜíÏù¥ÏßÄ ÏïäÏùå
      st.style.pointerEvents = "auto";
    }
  } catch {}
});

// ‚úÖ ÎÇ®ÏùÄ Î∞±ÎìúÎ°≠ Ï†úÍ±∞ + ÌÖåÏù¥Î∏î Í∞ÄÏãúÏÑ± Î≥¥Ï†ï
document.addEventListener(
  "click",
  e => {
    const hasModalOpen = document.body.classList.contains("modal-open");
    const leftoverBackdrop = document.querySelector(".modal-backdrop");
    if (!hasModalOpen && leftoverBackdrop) {
      leftoverBackdrop.remove();
      document.body.style.removeProperty("padding-right");
      document.body.style.removeProperty("overflow");
      const st = document.getElementById("sales-table");
      if (st) {
        st.style.position = "relative";
        st.style.zIndex = "1";
        st.style.pointerEvents = "auto";
      }
    }
  },
  true
);
